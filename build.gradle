buildDir 'installed'
allprojects {
    version '5.1.2'
}

subprojects {
    repositories {
        jcenter()
        maven {
            url 'https://oss.jfrog.org/artifactory/repo'
        }
        ivy {
            url 'http://mary.dfki.de/repo'
            layout 'maven'
        }
        ivy {
            url 'https://dl.dropboxusercontent.com/u/77978669/repo'
            layout 'maven'
        }
    }
}

new groovy.json.JsonSlurper().parse(file('components.json')).each { voice ->
    task(voice.name) {
        group 'Install'
        description voice.description
    }

    project(":$voice.name") {
        configurations.create 'marytts'

        voice.files.keySet().each { name ->
            def dependency = "$voice.group:$voice.artifact:$voice.version"
            if (name.endsWith('.zip')) {
                dependency += ":data@zip"
            }
            dependencies.marytts dependency
        }

        def verify = {
            if (voice.files[it.name] && !(rootProject.properties['verify'] && !rootProject.verify.toBoolean())) {
                def expected = voice.files[it.name].sha1
                def actual = it.file.parentFile.name
                logger.lifecycle "Verify\t$it.name"
                assert expected == actual: "Checksum failed for $it.name"
            }
        }

        task install(type: Copy) {
            description voice.description
            from configurations.marytts
            into rootProject.buildDir
            filesMatching '*.zip', { zip ->
                verify zip
                copy {
                    from zipTree(zip.file)
                    into rootProject.buildDir
                    eachFile { logger.lifecycle "Unpack\t$it.name" }
                }
                zip.exclude()
            }
            eachFile {
                verify it
                logger.lifecycle "Copy\t$it.name"
            }
            rootProject.tasks.getByName(voice.name).dependsOn it
        }
    }
}

task server(type: JavaExec) {
    group 'Runtime'
    description 'Start the MaryTTS server'
    defaultTasks.add it.name
    def jarFiles = buildDir.exists() ? buildDir.listFiles() : null
    if (jarFiles) {
        classpath jarFiles
    }
    workingDir buildDir
    main 'marytts.server.Mary'
    systemProperties System.properties
    if (logger.isEnabled(LogLevel.INFO)) {
        systemProperties << ['log4j.logger.marytts': 'INFO,stderr']
    }
    if (logger.isEnabled(LogLevel.DEBUG)) {
        systemProperties << ['log4j.logger.marytts': 'DEBUG,stderr']
    }
    doFirst {
        assert jarFiles: "No jar files found in \"$buildDir.name\" directory! Please install a MaryTTS voice first"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion '2.2.1'
    scriptFile 'marytts'
    init.dependsOn it
}

apply plugin: 'distribution'

distributions.main {
    contents {
        from rootDir, { exclude file('.gitignore').canRead() ? file('.gitignore').readLines() : buildDir.name }
        from buildDir, {
            into buildDir.name
            exclude distsDir.name, 'install'
        }
        eachFile { logger.lifecycle "Pack\t$it.name" }
    }
}
